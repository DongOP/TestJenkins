apply plugin: 'com.android.application'

// 默认版本号
ext.appVersionCode = 101
// 默认版本名
ext.appVersionName = "1.0.1"
// 默认正式包后缀名
//ext.appSuffixName = "_master.apk"
// 默认apk输出路径
//ext.appReleaseDir = "E:\\build\\Jenkins\\apps\\"

def loadProperties() {
    def proFile = file("local.properties")
    if (!proFile.exists()) {
        proFile = file("E:\\GithubDir\\TestJenkins\\local.properties")
    }

    Properties pro = new Properties()
    proFile.withInputStream { stream->
        pro.load(stream)
    }

//    appReleaseDir = pro.appReleaseDir
//    appSuffixName = pro.appSuffixName
}

loadProperties()

allprojects {
    repositories {
        jcenter()
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
    }
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "jenkins.dong.com.jenkinspro"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // 禁止Lint出错导致打包异常终止
    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
        abortOnError false
        ignoreWarnings true
        checkReleaseBuilds false
    }

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:27.1.1'
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 应用编译完成，自定义apk文件名
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-${getDate()}_${defaultConfig.versionName}.apk")
                outputFileName = fileName
            }
        }
    }


    flavorDimensions "master"
    productFlavors {
        market {
            dimension "master"
        }
        // 当前版本的分支名
        master {}
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// 获取格式化时间，用来标识打包时间，同时避免命名冲突
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd.HHmm')
    return formattedDate
}