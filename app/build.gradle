apply plugin: 'com.android.application'

// 默认版本号
ext.appVersionCode = 20100
// 默认版本名
ext.appVersionName = "2.01.00"
// 默认正式包后缀名
ext.appSuffixName = "_release.apk"
// 默认apk输出路径
ext.appReleaseDir = "H:\\Jenkins\\app"

def loadProperties() {
    def proFile = file("../local.properties")
    Properties pro = new Properties()
    proFile.withInputStream { stream->
        pro.load(stream)
    }

    appReleaseDir = pro.appReleaseDir
//    appVersionCode = Integer.valueOf(pro.appVersionCode)
//    appVersionName = pro.appVersionName
    appSuffixName = pro.appSuffixName
}

loadProperties()

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        applicationId "demo.fragment.telecom"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 默认打包渠道是MASTER
//        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]
    }

    signingConfigs {
        release {
            storeFile file("keystore")
            storePassword "yg20161024"
            keyAlias "Album"
            keyPassword "yg20161024"
        }
    }

    // 禁止Lint出错导致打包异常终止
    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
        abortOnError false
        ignoreWarnings true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        // 通用
        master {}
        // 01 二维码定制
        aluratek {
            versionCode appVersionCode + 1
            versionName getAppVersion()
        }
        // 应用宝
        应用宝{}
    }

//    productFlavors.all { flavor ->
//        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//    }

    //应用编译完成，自定义apk输出位置及文件名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            //开始输出,自定义输出路径      "_V" +appVersionName +
            output.outputFile = new File(appReleaseDir + getDate() + "/" + variant.productFlavors[0].name + appSuffixName)
        }
    }
}

// 获取Aluratek的版本号
def getAppVersion() {
    def index = appVersionName.lastIndexOf("0")

    return appVersionName.substring(0, index) + "1"
}

// 获取格式化时间，用来标识打包时间，同时避免命名冲突
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd_HHmm')
    return formattedDate
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    testCompile 'junit:junit:4.12'
}
